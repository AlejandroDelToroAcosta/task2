"C:\Program Files\Java\jdk-17\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\aadel\Desktop\GCID\Tercero\BD\Ind.Assignments\MatrixOptimization\target\test-classes;C:\Users\aadel\Desktop\GCID\Tercero\BD\Ind.Assignments\MatrixOptimization\target\classes;C:\Users\aadel\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\aadel\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\aadel\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\aadel\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.35\jmh-generator-annprocess-1.35.jar org.openjdk.jmh.Main "benchmark.parallel.ParallelMultiplicationBenchmark.*"
# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 1, size = 100)

# Run progress: 0,00% complete, ETA 00:01:12
# Fork: 1 of 1
# Warmup Iteration   1: 1,178 ms/op
# Warmup Iteration   2: 1,254 ms/op
# Warmup Iteration   3: 1,238 ms/op
Iteration   1: 1,213 ms/op
Iteration   2: 1,212 ms/op
Iteration   3: 1,219 ms/op
Iteration   4: 1,206 ms/op
Iteration   5: 1,219 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  1,214 ±(99.9%) 0,021 ms/op [Average]
  (min, avg, max) = (1,206, 1,214, 1,219), stdev = 0,005
  CI (99.9%): [1,193, 1,235] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 1, size = 500)

# Run progress: 11,11% complete, ETA 00:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 185,027 ms/op
# Warmup Iteration   2: 171,481 ms/op
# Warmup Iteration   3: 173,614 ms/op
Iteration   1: 176,219 ms/op
Iteration   2: 176,376 ms/op
Iteration   3: 176,306 ms/op
Iteration   4: 174,933 ms/op
Iteration   5: 178,566 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  176,480 ±(99.9%) 5,041 ms/op [Average]
  (min, avg, max) = (174,933, 176,480, 178,566), stdev = 1,309
  CI (99.9%): [171,439, 181,521] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 1, size = 1024)

# Run progress: 22,22% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 2387,421 ms/op
# Warmup Iteration   2: 2745,534 ms/op
# Warmup Iteration   3: 2865,471 ms/op
Iteration   1: 2559,522 ms/op
Iteration   2: 2979,164 ms/op
Iteration   3: 2360,693 ms/op
Iteration   4: 2251,534 ms/op
Iteration   5: 2360,360 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  2502,255 ±(99.9%) 1112,291 ms/op [Average]
  (min, avg, max) = (2251,534, 2502,255, 2979,164), stdev = 288,858
  CI (99.9%): [1389,964, 3614,546] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 2, size = 100)

# Run progress: 33,33% complete, ETA 00:01:19
# Fork: 1 of 1
# Warmup Iteration   1: 0,689 ms/op
# Warmup Iteration   2: 0,704 ms/op
# Warmup Iteration   3: 0,655 ms/op
Iteration   1: 0,663 ms/op
Iteration   2: 0,630 ms/op
Iteration   3: 0,643 ms/op
Iteration   4: 0,639 ms/op
Iteration   5: 0,632 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  0,641 ±(99.9%) 0,050 ms/op [Average]
  (min, avg, max) = (0,630, 0,641, 0,663), stdev = 0,013
  CI (99.9%): [0,591, 0,692] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 2, size = 500)

# Run progress: 44,44% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 98,584 ms/op
# Warmup Iteration   2: 93,973 ms/op
# Warmup Iteration   3: 108,981 ms/op
Iteration   1: 102,547 ms/op
Iteration   2: 113,372 ms/op
Iteration   3: 103,383 ms/op
Iteration   4: 100,027 ms/op
Iteration   5: 95,996 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  103,065 ±(99.9%) 24,791 ms/op [Average]
  (min, avg, max) = (95,996, 103,065, 113,372), stdev = 6,438
  CI (99.9%): [78,274, 127,856] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 2, size = 1024)

# Run progress: 55,56% complete, ETA 00:00:46
# Fork: 1 of 1
# Warmup Iteration   1: 1394,156 ms/op
# Warmup Iteration   2: 1354,689 ms/op
# Warmup Iteration   3: 1232,860 ms/op
Iteration   1: 1256,297 ms/op
Iteration   2: 1206,216 ms/op
Iteration   3: 1270,598 ms/op
Iteration   4: 1213,099 ms/op
Iteration   5: 1271,190 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  1243,480 ±(99.9%) 121,449 ms/op [Average]
  (min, avg, max) = (1206,216, 1243,480, 1271,190), stdev = 31,540
  CI (99.9%): [1122,031, 1364,929] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 4, size = 100)

# Run progress: 66,67% complete, ETA 00:00:34
# Fork: 1 of 1
# Warmup Iteration   1: 0,544 ms/op
# Warmup Iteration   2: 0,509 ms/op
# Warmup Iteration   3: 0,504 ms/op
Iteration   1: 0,505 ms/op
Iteration   2: 0,509 ms/op
Iteration   3: 0,505 ms/op
Iteration   4: 0,505 ms/op
Iteration   5: 0,506 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  0,506 ±(99.9%) 0,007 ms/op [Average]
  (min, avg, max) = (0,505, 0,506, 0,509), stdev = 0,002
  CI (99.9%): [0,499, 0,513] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 4, size = 500)

# Run progress: 77,78% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 64,646 ms/op
# Warmup Iteration   2: 59,255 ms/op
# Warmup Iteration   3: 62,070 ms/op
Iteration   1: 62,823 ms/op
Iteration   2: 61,228 ms/op
Iteration   3: 61,058 ms/op
Iteration   4: 60,143 ms/op
Iteration   5: 61,265 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  61,303 ±(99.9%) 3,715 ms/op [Average]
  (min, avg, max) = (60,143, 61,303, 62,823), stdev = 0,965
  CI (99.9%): [57,588, 65,019] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55217:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication
# Parameters: (numThreads = 4, size = 1024)

# Run progress: 88,89% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: 892,721 ms/op
# Warmup Iteration   2: 794,809 ms/op
# Warmup Iteration   3: 720,485 ms/op
Iteration   1: 743,449 ms/op
Iteration   2: 759,662 ms/op
Iteration   3: 766,300 ms/op
Iteration   4: 733,570 ms/op
Iteration   5: 713,895 ms/op


Result "benchmark.parallel.ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication":
  743,375 ±(99.9%) 80,681 ms/op [Average]
  (min, avg, max) = (713,895, 743,375, 766,300), stdev = 20,953
  CI (99.9%): [662,694, 824,057] (assumes normal distribution)


# Run complete. Total time: 00:01:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                              (numThreads)  (size)  Mode  Cnt     Score      Error  Units
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             1     100  avgt    5     1,214 ±    0,021  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             1     500  avgt    5   176,480 ±    5,041  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             1    1024  avgt    5  2502,255 ± 1112,291  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             2     100  avgt    5     0,641 ±    0,050  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             2     500  avgt    5   103,065 ±   24,791  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             2    1024  avgt    5  1243,480 ±  121,449  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             4     100  avgt    5     0,506 ±    0,007  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             4     500  avgt    5    61,303 ±    3,715  ms/op
ParallelMultiplicationBenchmark.benchmarkParallelMatrixMultiplication             4    1024  avgt    5   743,375 ±   80,681  ms/op

Process finished with exit code 0
