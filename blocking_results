"C:\Program Files\Java\jdk-17\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55388:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\aadel\Desktop\GCID\Tercero\BD\Ind.Assignments\MatrixOptimization\target\test-classes;C:\Users\aadel\Desktop\GCID\Tercero\BD\Ind.Assignments\MatrixOptimization\target\classes;C:\Users\aadel\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\aadel\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\aadel\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\aadel\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.35\jmh-generator-annprocess-1.35.jar org.openjdk.jmh.Main "benchmark.blocking.BlockMatrixMultiplicationBenchmark.*"
# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55388:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication
# Parameters: (matrixSize = 100)

# Run progress: 0,00% complete, ETA 00:25:00
# Fork: 1 of 5
# Warmup Iteration   1: 1,670 ms/op
# Warmup Iteration   2: 1,718 ms/op
# Warmup Iteration   3: 1,718 ms/op
# Warmup Iteration   4: 1,733 ms/op
# Warmup Iteration   5: 1,741 ms/op
Iteration   1: 1,722 ms/op
Iteration   2: 1,716 ms/op
Iteration   3: 1,736 ms/op
Iteration   4: 1,737 ms/op
Iteration   5: 1,749 ms/op

# Run progress: 6,67% complete, ETA 00:23:33
# Fork: 2 of 5
# Warmup Iteration   1: 1,695 ms/op
# Warmup Iteration   2: 1,727 ms/op
# Warmup Iteration   3: 1,735 ms/op
# Warmup Iteration   4: 1,735 ms/op
# Warmup Iteration   5: 1,742 ms/op
Iteration   1: 1,740 ms/op
Iteration   2: 1,768 ms/op
Iteration   3: 1,784 ms/op
Iteration   4: 1,818 ms/op
Iteration   5: 1,763 ms/op

# Run progress: 13,33% complete, ETA 00:21:51
# Fork: 3 of 5
# Warmup Iteration   1: 1,717 ms/op
# Warmup Iteration   2: 1,748 ms/op
# Warmup Iteration   3: 1,751 ms/op
# Warmup Iteration   4: 1,741 ms/op
# Warmup Iteration   5: 1,746 ms/op
Iteration   1: 1,761 ms/op
Iteration   2: 1,749 ms/op
Iteration   3: 1,746 ms/op
Iteration   4: 1,750 ms/op
Iteration   5: 1,756 ms/op

# Run progress: 20,00% complete, ETA 00:20:10
# Fork: 4 of 5
# Warmup Iteration   1: 1,687 ms/op
# Warmup Iteration   2: 1,734 ms/op
# Warmup Iteration   3: 1,735 ms/op
# Warmup Iteration   4: 1,746 ms/op
# Warmup Iteration   5: 1,724 ms/op
Iteration   1: 1,740 ms/op
Iteration   2: 1,738 ms/op
Iteration   3: 1,755 ms/op
Iteration   4: 1,754 ms/op
Iteration   5: 1,735 ms/op

# Run progress: 26,67% complete, ETA 00:18:29
# Fork: 5 of 5
# Warmup Iteration   1: 1,706 ms/op
# Warmup Iteration   2: 1,764 ms/op
# Warmup Iteration   3: 1,749 ms/op
# Warmup Iteration   4: 1,751 ms/op
# Warmup Iteration   5: 1,739 ms/op
Iteration   1: 1,742 ms/op
Iteration   2: 1,748 ms/op
Iteration   3: 1,732 ms/op
Iteration   4: 1,743 ms/op
Iteration   5: 1,751 ms/op


Result "benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication":
  1,749 ±(99.9%) 0,015 ms/op [Average]
  (min, avg, max) = (1,716, 1,749, 1,818), stdev = 0,020
  CI (99.9%): [1,734, 1,765] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55388:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication
# Parameters: (matrixSize = 500)

# Run progress: 33,33% complete, ETA 00:16:48
# Fork: 1 of 5
# Warmup Iteration   1: 228,599 ms/op
# Warmup Iteration   2: 226,692 ms/op
# Warmup Iteration   3: 228,098 ms/op
# Warmup Iteration   4: 226,760 ms/op
# Warmup Iteration   5: 228,259 ms/op
Iteration   1: 227,091 ms/op
Iteration   2: 224,436 ms/op
Iteration   3: 225,085 ms/op
Iteration   4: 226,388 ms/op
Iteration   5: 227,301 ms/op

# Run progress: 40,00% complete, ETA 00:15:09
# Fork: 2 of 5
# Warmup Iteration   1: 227,910 ms/op
# Warmup Iteration   2: 224,703 ms/op
# Warmup Iteration   3: 225,555 ms/op
# Warmup Iteration   4: 226,151 ms/op
# Warmup Iteration   5: 228,009 ms/op
Iteration   1: 228,544 ms/op
Iteration   2: 227,456 ms/op
Iteration   3: 226,639 ms/op
Iteration   4: 227,533 ms/op
Iteration   5: 224,795 ms/op

# Run progress: 46,67% complete, ETA 00:13:29
# Fork: 3 of 5
# Warmup Iteration   1: 226,174 ms/op
# Warmup Iteration   2: 222,690 ms/op
# Warmup Iteration   3: 223,068 ms/op
# Warmup Iteration   4: 225,954 ms/op
# Warmup Iteration   5: 224,047 ms/op
Iteration   1: 224,784 ms/op
Iteration   2: 224,921 ms/op
Iteration   3: 227,116 ms/op
Iteration   4: 228,063 ms/op
Iteration   5: 227,340 ms/op

# Run progress: 53,33% complete, ETA 00:11:49
# Fork: 4 of 5
# Warmup Iteration   1: 229,440 ms/op
# Warmup Iteration   2: 224,982 ms/op
# Warmup Iteration   3: 228,874 ms/op
# Warmup Iteration   4: 226,903 ms/op
# Warmup Iteration   5: 227,685 ms/op
Iteration   1: 227,961 ms/op
Iteration   2: 224,136 ms/op
Iteration   3: 225,478 ms/op
Iteration   4: 227,778 ms/op
Iteration   5: 227,454 ms/op

# Run progress: 60,00% complete, ETA 00:10:08
# Fork: 5 of 5
# Warmup Iteration   1: 227,026 ms/op
# Warmup Iteration   2: 225,094 ms/op
# Warmup Iteration   3: 229,211 ms/op
# Warmup Iteration   4: 227,548 ms/op
# Warmup Iteration   5: 227,172 ms/op
Iteration   1: 226,816 ms/op
Iteration   2: 226,966 ms/op
Iteration   3: 226,398 ms/op
Iteration   4: 224,937 ms/op
Iteration   5: 225,423 ms/op


Result "benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication":
  226,434 ±(99.9%) 0,973 ms/op [Average]
  (min, avg, max) = (224,136, 226,434, 228,544), stdev = 1,298
  CI (99.9%): [225,461, 227,406] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17, Java HotSpot(TM) 64-Bit Server VM, 17+35-LTS-2724
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\lib\idea_rt.jar=55388:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.2.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication
# Parameters: (matrixSize = 1024)

# Run progress: 66,67% complete, ETA 00:08:27
# Fork: 1 of 5
# Warmup Iteration   1: 2143,026 ms/op
# Warmup Iteration   2: 2064,119 ms/op
# Warmup Iteration   3: 2045,962 ms/op
# Warmup Iteration   4: 2054,070 ms/op
# Warmup Iteration   5: 2056,303 ms/op
Iteration   1: 2064,443 ms/op
Iteration   2: 2072,350 ms/op
Iteration   3: 2102,273 ms/op
Iteration   4: 2081,661 ms/op
Iteration   5: 2053,401 ms/op

# Run progress: 73,33% complete, ETA 00:06:46
# Fork: 2 of 5
# Warmup Iteration   1: 2155,099 ms/op
# Warmup Iteration   2: 2120,593 ms/op
# Warmup Iteration   3: 2073,764 ms/op
# Warmup Iteration   4: 2093,490 ms/op
# Warmup Iteration   5: 2079,182 ms/op
Iteration   1: 2079,221 ms/op
Iteration   2: 2077,517 ms/op
Iteration   3: 2080,215 ms/op
Iteration   4: 2108,609 ms/op
Iteration   5: 2081,428 ms/op

# Run progress: 80,00% complete, ETA 00:05:06
# Fork: 3 of 5
# Warmup Iteration   1: 2143,715 ms/op
# Warmup Iteration   2: 2105,914 ms/op
# Warmup Iteration   3: 2097,560 ms/op
# Warmup Iteration   4: 2102,505 ms/op
# Warmup Iteration   5: 2089,449 ms/op
Iteration   1: 2071,982 ms/op
Iteration   2: 2065,349 ms/op
Iteration   3: 2059,579 ms/op
Iteration   4: 2054,925 ms/op
Iteration   5: 2072,820 ms/op

# Run progress: 86,67% complete, ETA 00:03:24
# Fork: 4 of 5
# Warmup Iteration   1: 2104,564 ms/op
# Warmup Iteration   2: 2090,006 ms/op
# Warmup Iteration   3: 2053,843 ms/op
# Warmup Iteration   4: 2046,111 ms/op
# Warmup Iteration   5: 2051,070 ms/op
Iteration   1: 2080,476 ms/op
Iteration   2: 2081,544 ms/op
Iteration   3: 2064,288 ms/op
Iteration   4: 2034,795 ms/op
Iteration   5: 2058,905 ms/op

# Run progress: 93,33% complete, ETA 00:01:42
# Fork: 5 of 5
# Warmup Iteration   1: 2126,135 ms/op
# Warmup Iteration   2: 2100,012 ms/op
# Warmup Iteration   3: 2078,033 ms/op
# Warmup Iteration   4: 2068,575 ms/op
# Warmup Iteration   5: 2054,552 ms/op
Iteration   1: 2045,454 ms/op
Iteration   2: 2069,548 ms/op
Iteration   3: 2070,955 ms/op
Iteration   4: 2094,880 ms/op
Iteration   5: 2089,553 ms/op


Result "benchmark.blocking.BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication":
  2072,647 ±(99.9%) 12,603 ms/op [Average]
  (min, avg, max) = (2034,795, 2072,647, 2108,609), stdev = 16,825
  CI (99.9%): [2060,044, 2085,250] (assumes normal distribution)


# Run complete. Total time: 00:25:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                         (matrixSize)  Mode  Cnt     Score    Error  Units
BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication           100  avgt   25     1,749 ±  0,015  ms/op
BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication           500  avgt   25   226,434 ±  0,973  ms/op
BlockMatrixMultiplicationBenchmark.testBlockMatrixMultiplication          1024  avgt   25  2072,647 ± 12,603  ms/op

Process finished with exit code 0
